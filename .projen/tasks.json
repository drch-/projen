{
  "tasks": {
    "compile": {
      "name": "compile",
      "env": {
        "PATH": "$(npx -c 'echo $PATH')"
      },
      "steps": [
        {
          "exec": "jsii --silence-warnings=reserved-word --no-fix-peer-dependencies"
        },
        {
          "exec": "jsii-docgen"
        }
      ],
      "description": "Only compile"
    },
    "test": {
      "name": "test",
      "env": {
        "PATH": "$(npx -c 'echo $PATH')"
      },
      "steps": [
        {
          "exec": "jest --passWithNoTests --updateSnapshot"
        },
        {
          "subtask": "eslint"
        }
      ],
      "description": "Run tests"
    },
    "build": {
      "name": "build",
      "env": {
        "PATH": "$(npx -c 'echo $PATH')"
      },
      "steps": [
        {
          "subtask": "compile"
        },
        {
          "subtask": "test"
        },
        {
          "subtask": "package"
        },
        {
          "subtask": "readme-macros"
        }
      ],
      "description": "Full release build (test+compile)"
    },
    "bump": {
      "name": "bump",
      "env": {
        "PATH": "$(npx -c 'echo $PATH')"
      },
      "steps": [
        {
          "exec": "yarn run --silent no-changes || standard-version"
        }
      ],
      "description": "Commits a bump to the package version based on conventional commits"
    },
    "release": {
      "name": "release",
      "env": {
        "PATH": "$(npx -c 'echo $PATH')"
      },
      "steps": [
        {
          "exec": "yarn run --silent no-changes || (yarn run bump && git push --follow-tags origin master)"
        }
      ],
      "description": "Bumps version & push to master"
    },
    "test:watch": {
      "name": "test:watch",
      "env": {
        "PATH": "$(npx -c 'echo $PATH')"
      },
      "steps": [
        {
          "exec": "jest --watch"
        }
      ],
      "description": "Run jest in watch mode"
    },
    "test:update": {
      "name": "test:update",
      "env": {
        "PATH": "$(npx -c 'echo $PATH')"
      },
      "steps": [
        {
          "exec": "jest --updateSnapshot"
        }
      ],
      "description": "Update jest snapshots"
    },
    "projen:upgrade": {
      "name": "projen:upgrade",
      "env": {
        "PATH": "$(npx -c 'echo $PATH')"
      },
      "steps": [
        {
          "exec": "yarn upgrade -L projen"
        },
        {
          "exec": "CI=\"\" yarn projen"
        }
      ],
      "description": "upgrades projen to the latest version"
    },
    "watch": {
      "name": "watch",
      "env": {
        "PATH": "$(npx -c 'echo $PATH')"
      },
      "steps": [
        {
          "exec": "jsii -w --silence-warnings=reserved-word --no-fix-peer-dependencies"
        }
      ],
      "description": "Watch & compile in the background"
    },
    "package": {
      "name": "package",
      "env": {
        "PATH": "$(npx -c 'echo $PATH')"
      },
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "description": "Create an npm tarball"
    },
    "eslint": {
      "name": "eslint",
      "env": {
        "PATH": "$(npx -c 'echo $PATH')"
      },
      "steps": [
        {
          "exec": "eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern src test"
        }
      ],
      "description": "Runs eslint against the codebase"
    },
    "compat": {
      "name": "compat",
      "env": {
        "PATH": "$(npx -c 'echo $PATH')"
      },
      "steps": [
        {
          "exec": "jsii-diff npm:$(node -p \"require('./package.json').name\") -k --ignore-file .compatignore || (echo \"\nUNEXPECTED BREAKING CHANGES: add keys such as 'removed:constructs.Node.of' to .compatignore to skip.\n\" && exit 1)"
        }
      ],
      "description": "Perform API compatibility check against latest version"
    },
    "docgen": {
      "name": "docgen",
      "env": {
        "PATH": "$(npx -c 'echo $PATH')"
      },
      "steps": [
        {
          "exec": "jsii-docgen"
        }
      ],
      "description": "Generate API.md from .jsii manifest"
    },
    "readme-macros": {
      "name": "readme-macros",
      "env": {
        "PATH": "$(npx -c 'echo $PATH')"
      },
      "steps": [
        {
          "exec": "mv README.md README.md.bak"
        },
        {
          "exec": "cat README.md.bak | markmac > README.md"
        },
        {
          "exec": "rm README.md.bak"
        }
      ],
      "description": "readme-macros"
    }
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}